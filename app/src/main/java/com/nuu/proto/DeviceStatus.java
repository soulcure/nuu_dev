package com.nuu.proto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: device_status.proto

public final class DeviceStatus {
    private DeviceStatus() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    /**
     * Protobuf enum {@code NetworkMode}
     */
    public enum NetworkMode
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * * Network type is unknown
         * </pre>
         *
         * <code>NETWORK_TYPE_UNKNOWN = 0;</code>
         */
        NETWORK_TYPE_UNKNOWN(0),
        /**
         * <pre>
         * * Current network is GPRS
         * </pre>
         *
         * <code>NETWORK_TYPE_GPRS = 1;</code>
         */
        NETWORK_TYPE_GPRS(1),
        /**
         * <pre>
         * * Current network is EDGE
         * </pre>
         *
         * <code>NETWORK_TYPE_EDGE = 2;</code>
         */
        NETWORK_TYPE_EDGE(2),
        /**
         * <pre>
         * * Current network is UMTS
         * </pre>
         *
         * <code>NETWORK_TYPE_UMTS = 3;</code>
         */
        NETWORK_TYPE_UMTS(3),
        /**
         * <pre>
         * * Current network is CDMA: Either IS95A or IS95B
         * </pre>
         *
         * <code>NETWORK_TYPE_CDMA = 4;</code>
         */
        NETWORK_TYPE_CDMA(4),
        /**
         * <pre>
         * * Current network is EVDO revision 0
         * </pre>
         *
         * <code>NETWORK_TYPE_EVDO_0 = 5;</code>
         */
        NETWORK_TYPE_EVDO_0(5),
        /**
         * <pre>
         * * Current network is EVDO revision A
         * </pre>
         *
         * <code>NETWORK_TYPE_EVDO_A = 6;</code>
         */
        NETWORK_TYPE_EVDO_A(6),
        /**
         * <pre>
         * * Current network is 1xRTT
         * </pre>
         *
         * <code>NETWORK_TYPE_1xRTT = 7;</code>
         */
        NETWORK_TYPE_1xRTT(7),
        /**
         * <pre>
         * * Current network is HSDPA
         * </pre>
         *
         * <code>NETWORK_TYPE_HSDPA = 8;</code>
         */
        NETWORK_TYPE_HSDPA(8),
        /**
         * <pre>
         * * Current network is HSUPA
         * </pre>
         *
         * <code>NETWORK_TYPE_HSUPA = 9;</code>
         */
        NETWORK_TYPE_HSUPA(9),
        /**
         * <pre>
         * * Current network is HSPA
         * </pre>
         *
         * <code>NETWORK_TYPE_HSPA = 10;</code>
         */
        NETWORK_TYPE_HSPA(10),
        /**
         * <pre>
         * * Current network is iDen
         * </pre>
         *
         * <code>NETWORK_TYPE_IDEN = 11;</code>
         */
        NETWORK_TYPE_IDEN(11),
        /**
         * <pre>
         * * Current network is EVDO revision B
         * </pre>
         *
         * <code>NETWORK_TYPE_EVDO_B = 12;</code>
         */
        NETWORK_TYPE_EVDO_B(12),
        /**
         * <pre>
         * * Current network is LTE
         * </pre>
         *
         * <code>NETWORK_TYPE_LTE = 13;</code>
         */
        NETWORK_TYPE_LTE(13),
        /**
         * <pre>
         * * Current network is eHRPD
         * </pre>
         *
         * <code>NETWORK_TYPE_EHRPD = 14;</code>
         */
        NETWORK_TYPE_EHRPD(14),
        /**
         * <pre>
         * * Current network is HSPA+
         * </pre>
         *
         * <code>NETWORK_TYPE_HSPAP = 15;</code>
         */
        NETWORK_TYPE_HSPAP(15),
        /**
         * <pre>
         * * Current network is GSM
         * </pre>
         *
         * <code>NETWORK_TYPE_GSM = 16;</code>
         */
        NETWORK_TYPE_GSM(16),
        /**
         * <pre>
         * * Current network is TD_SCDMA
         * </pre>
         *
         * <code>NETWORK_TYPE_TD_SCDMA = 17;</code>
         */
        NETWORK_TYPE_TD_SCDMA(17),
        /**
         * <pre>
         * * Current network is IWLAN
         * </pre>
         *
         * <code>NETWORK_TYPE_IWLAN = 18;</code>
         */
        NETWORK_TYPE_IWLAN(18),
        /**
         * <pre>
         * * Current network is LTE_CA {&#64;hide}
         * </pre>
         *
         * <code>NETWORK_TYPE_LTE_CA = 19;</code>
         */
        NETWORK_TYPE_LTE_CA(19),
        ;

        /**
         * <pre>
         * * Network type is unknown
         * </pre>
         *
         * <code>NETWORK_TYPE_UNKNOWN = 0;</code>
         */
        public static final int NETWORK_TYPE_UNKNOWN_VALUE = 0;
        /**
         * <pre>
         * * Current network is GPRS
         * </pre>
         *
         * <code>NETWORK_TYPE_GPRS = 1;</code>
         */
        public static final int NETWORK_TYPE_GPRS_VALUE = 1;
        /**
         * <pre>
         * * Current network is EDGE
         * </pre>
         *
         * <code>NETWORK_TYPE_EDGE = 2;</code>
         */
        public static final int NETWORK_TYPE_EDGE_VALUE = 2;
        /**
         * <pre>
         * * Current network is UMTS
         * </pre>
         *
         * <code>NETWORK_TYPE_UMTS = 3;</code>
         */
        public static final int NETWORK_TYPE_UMTS_VALUE = 3;
        /**
         * <pre>
         * * Current network is CDMA: Either IS95A or IS95B
         * </pre>
         *
         * <code>NETWORK_TYPE_CDMA = 4;</code>
         */
        public static final int NETWORK_TYPE_CDMA_VALUE = 4;
        /**
         * <pre>
         * * Current network is EVDO revision 0
         * </pre>
         *
         * <code>NETWORK_TYPE_EVDO_0 = 5;</code>
         */
        public static final int NETWORK_TYPE_EVDO_0_VALUE = 5;
        /**
         * <pre>
         * * Current network is EVDO revision A
         * </pre>
         *
         * <code>NETWORK_TYPE_EVDO_A = 6;</code>
         */
        public static final int NETWORK_TYPE_EVDO_A_VALUE = 6;
        /**
         * <pre>
         * * Current network is 1xRTT
         * </pre>
         *
         * <code>NETWORK_TYPE_1xRTT = 7;</code>
         */
        public static final int NETWORK_TYPE_1xRTT_VALUE = 7;
        /**
         * <pre>
         * * Current network is HSDPA
         * </pre>
         *
         * <code>NETWORK_TYPE_HSDPA = 8;</code>
         */
        public static final int NETWORK_TYPE_HSDPA_VALUE = 8;
        /**
         * <pre>
         * * Current network is HSUPA
         * </pre>
         *
         * <code>NETWORK_TYPE_HSUPA = 9;</code>
         */
        public static final int NETWORK_TYPE_HSUPA_VALUE = 9;
        /**
         * <pre>
         * * Current network is HSPA
         * </pre>
         *
         * <code>NETWORK_TYPE_HSPA = 10;</code>
         */
        public static final int NETWORK_TYPE_HSPA_VALUE = 10;
        /**
         * <pre>
         * * Current network is iDen
         * </pre>
         *
         * <code>NETWORK_TYPE_IDEN = 11;</code>
         */
        public static final int NETWORK_TYPE_IDEN_VALUE = 11;
        /**
         * <pre>
         * * Current network is EVDO revision B
         * </pre>
         *
         * <code>NETWORK_TYPE_EVDO_B = 12;</code>
         */
        public static final int NETWORK_TYPE_EVDO_B_VALUE = 12;
        /**
         * <pre>
         * * Current network is LTE
         * </pre>
         *
         * <code>NETWORK_TYPE_LTE = 13;</code>
         */
        public static final int NETWORK_TYPE_LTE_VALUE = 13;
        /**
         * <pre>
         * * Current network is eHRPD
         * </pre>
         *
         * <code>NETWORK_TYPE_EHRPD = 14;</code>
         */
        public static final int NETWORK_TYPE_EHRPD_VALUE = 14;
        /**
         * <pre>
         * * Current network is HSPA+
         * </pre>
         *
         * <code>NETWORK_TYPE_HSPAP = 15;</code>
         */
        public static final int NETWORK_TYPE_HSPAP_VALUE = 15;
        /**
         * <pre>
         * * Current network is GSM
         * </pre>
         *
         * <code>NETWORK_TYPE_GSM = 16;</code>
         */
        public static final int NETWORK_TYPE_GSM_VALUE = 16;
        /**
         * <pre>
         * * Current network is TD_SCDMA
         * </pre>
         *
         * <code>NETWORK_TYPE_TD_SCDMA = 17;</code>
         */
        public static final int NETWORK_TYPE_TD_SCDMA_VALUE = 17;
        /**
         * <pre>
         * * Current network is IWLAN
         * </pre>
         *
         * <code>NETWORK_TYPE_IWLAN = 18;</code>
         */
        public static final int NETWORK_TYPE_IWLAN_VALUE = 18;
        /**
         * <pre>
         * * Current network is LTE_CA {&#64;hide}
         * </pre>
         *
         * <code>NETWORK_TYPE_LTE_CA = 19;</code>
         */
        public static final int NETWORK_TYPE_LTE_CA_VALUE = 19;


        public final int getNumber() {
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static NetworkMode valueOf(int value) {
            return forNumber(value);
        }

        public static NetworkMode forNumber(int value) {
            switch (value) {
                case 0:
                    return NETWORK_TYPE_UNKNOWN;
                case 1:
                    return NETWORK_TYPE_GPRS;
                case 2:
                    return NETWORK_TYPE_EDGE;
                case 3:
                    return NETWORK_TYPE_UMTS;
                case 4:
                    return NETWORK_TYPE_CDMA;
                case 5:
                    return NETWORK_TYPE_EVDO_0;
                case 6:
                    return NETWORK_TYPE_EVDO_A;
                case 7:
                    return NETWORK_TYPE_1xRTT;
                case 8:
                    return NETWORK_TYPE_HSDPA;
                case 9:
                    return NETWORK_TYPE_HSUPA;
                case 10:
                    return NETWORK_TYPE_HSPA;
                case 11:
                    return NETWORK_TYPE_IDEN;
                case 12:
                    return NETWORK_TYPE_EVDO_B;
                case 13:
                    return NETWORK_TYPE_LTE;
                case 14:
                    return NETWORK_TYPE_EHRPD;
                case 15:
                    return NETWORK_TYPE_HSPAP;
                case 16:
                    return NETWORK_TYPE_GSM;
                case 17:
                    return NETWORK_TYPE_TD_SCDMA;
                case 18:
                    return NETWORK_TYPE_IWLAN;
                case 19:
                    return NETWORK_TYPE_LTE_CA;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<NetworkMode>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static final com.google.protobuf.Internal.EnumLiteMap<
                NetworkMode> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<NetworkMode>() {
                    public NetworkMode findValueByNumber(int number) {
                        return NetworkMode.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return DeviceStatus.getDescriptor().getEnumTypes().get(0);
        }

        private static final NetworkMode[] VALUES = values();

        public static NetworkMode valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private NetworkMode(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:NetworkMode)
    }

    public interface SimCardSlotOrBuilder extends
            // @@protoc_insertion_point(interface_extends:SimCardSlot)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string imsi = 1;</code>
         */
        boolean hasImsi();

        /**
         * <code>optional string imsi = 1;</code>
         */
        String getImsi();

        /**
         * <code>optional string imsi = 1;</code>
         */
        com.google.protobuf.ByteString
        getImsiBytes();

        /**
         * <code>optional uint32 plmn = 2;</code>
         */
        boolean hasPlmn();

        /**
         * <code>optional uint32 plmn = 2;</code>
         */
        int getPlmn();

        /**
         * <code>optional .NetworkMode mode = 3;</code>
         */
        boolean hasMode();

        /**
         * <code>optional .NetworkMode mode = 3;</code>
         */
        DeviceStatus.NetworkMode getMode();

        /**
         * <code>optional uint32 signal = 4;</code>
         */
        boolean hasSignal();

        /**
         * <code>optional uint32 signal = 4;</code>
         */
        int getSignal();

        /**
         * <code>optional uint32 lac = 5;</code>
         */
        boolean hasLac();

        /**
         * <code>optional uint32 lac = 5;</code>
         */
        int getLac();

        /**
         * <code>optional uint32 ci = 6;</code>
         */
        boolean hasCi();

        /**
         * <code>optional uint32 ci = 6;</code>
         */
        int getCi();

        /**
         * <code>optional uint32 psc = 7;</code>
         */
        boolean hasPsc();

        /**
         * <code>optional uint32 psc = 7;</code>
         */
        int getPsc();
    }

    /**
     * Protobuf type {@code SimCardSlot}
     */
    public static final class SimCardSlot extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:SimCardSlot)
            SimCardSlotOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use SimCardSlot.newBuilder() to construct.
        private SimCardSlot(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private SimCardSlot() {
            imsi_ = "";
            plmn_ = 0;
            mode_ = 0;
            signal_ = 0;
            lac_ = 0;
            ci_ = 0;
            psc_ = 0;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private SimCardSlot(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000001;
                            imsi_ = bs;
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            plmn_ = input.readUInt32();
                            break;
                        }
                        case 24: {
                            int rawValue = input.readEnum();
                            @SuppressWarnings("deprecation")
                            DeviceStatus.NetworkMode value = DeviceStatus.NetworkMode.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(3, rawValue);
                            } else {
                                bitField0_ |= 0x00000004;
                                mode_ = rawValue;
                            }
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            signal_ = input.readUInt32();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            lac_ = input.readUInt32();
                            break;
                        }
                        case 48: {
                            bitField0_ |= 0x00000020;
                            ci_ = input.readUInt32();
                            break;
                        }
                        case 56: {
                            bitField0_ |= 0x00000040;
                            psc_ = input.readUInt32();
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DeviceStatus.internal_static_SimCardSlot_descriptor;
        }

        @Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DeviceStatus.internal_static_SimCardSlot_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            DeviceStatus.SimCardSlot.class, DeviceStatus.SimCardSlot.Builder.class);
        }

        private int bitField0_;
        public static final int IMSI_FIELD_NUMBER = 1;
        private volatile Object imsi_;

        /**
         * <code>optional string imsi = 1;</code>
         */
        public boolean hasImsi() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional string imsi = 1;</code>
         */
        public String getImsi() {
            Object ref = imsi_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    imsi_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string imsi = 1;</code>
         */
        public com.google.protobuf.ByteString
        getImsiBytes() {
            Object ref = imsi_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                imsi_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int PLMN_FIELD_NUMBER = 2;
        private int plmn_;

        /**
         * <code>optional uint32 plmn = 2;</code>
         */
        public boolean hasPlmn() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional uint32 plmn = 2;</code>
         */
        public int getPlmn() {
            return plmn_;
        }

        public static final int MODE_FIELD_NUMBER = 3;
        private int mode_;

        /**
         * <code>optional .NetworkMode mode = 3;</code>
         */
        public boolean hasMode() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional .NetworkMode mode = 3;</code>
         */
        public DeviceStatus.NetworkMode getMode() {
            @SuppressWarnings("deprecation")
            DeviceStatus.NetworkMode result = DeviceStatus.NetworkMode.valueOf(mode_);
            return result == null ? DeviceStatus.NetworkMode.NETWORK_TYPE_UNKNOWN : result;
        }

        public static final int SIGNAL_FIELD_NUMBER = 4;
        private int signal_;

        /**
         * <code>optional uint32 signal = 4;</code>
         */
        public boolean hasSignal() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional uint32 signal = 4;</code>
         */
        public int getSignal() {
            return signal_;
        }

        public static final int LAC_FIELD_NUMBER = 5;
        private int lac_;

        /**
         * <code>optional uint32 lac = 5;</code>
         */
        public boolean hasLac() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>optional uint32 lac = 5;</code>
         */
        public int getLac() {
            return lac_;
        }

        public static final int CI_FIELD_NUMBER = 6;
        private int ci_;

        /**
         * <code>optional uint32 ci = 6;</code>
         */
        public boolean hasCi() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        /**
         * <code>optional uint32 ci = 6;</code>
         */
        public int getCi() {
            return ci_;
        }

        public static final int PSC_FIELD_NUMBER = 7;
        private int psc_;

        /**
         * <code>optional uint32 psc = 7;</code>
         */
        public boolean hasPsc() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
        }

        /**
         * <code>optional uint32 psc = 7;</code>
         */
        public int getPsc() {
            return psc_;
        }

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, imsi_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt32(2, plmn_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeEnum(3, mode_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeUInt32(4, signal_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeUInt32(5, lac_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeUInt32(6, ci_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                output.writeUInt32(7, psc_);
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, imsi_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, plmn_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(3, mode_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(4, signal_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(5, lac_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(6, ci_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(7, psc_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof DeviceStatus.SimCardSlot)) {
                return super.equals(obj);
            }
            DeviceStatus.SimCardSlot other = (DeviceStatus.SimCardSlot) obj;

            boolean result = true;
            result = result && (hasImsi() == other.hasImsi());
            if (hasImsi()) {
                result = result && getImsi()
                        .equals(other.getImsi());
            }
            result = result && (hasPlmn() == other.hasPlmn());
            if (hasPlmn()) {
                result = result && (getPlmn()
                        == other.getPlmn());
            }
            result = result && (hasMode() == other.hasMode());
            if (hasMode()) {
                result = result && mode_ == other.mode_;
            }
            result = result && (hasSignal() == other.hasSignal());
            if (hasSignal()) {
                result = result && (getSignal()
                        == other.getSignal());
            }
            result = result && (hasLac() == other.hasLac());
            if (hasLac()) {
                result = result && (getLac()
                        == other.getLac());
            }
            result = result && (hasCi() == other.hasCi());
            if (hasCi()) {
                result = result && (getCi()
                        == other.getCi());
            }
            result = result && (hasPsc() == other.hasPsc());
            if (hasPsc()) {
                result = result && (getPsc()
                        == other.getPsc());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasImsi()) {
                hash = (37 * hash) + IMSI_FIELD_NUMBER;
                hash = (53 * hash) + getImsi().hashCode();
            }
            if (hasPlmn()) {
                hash = (37 * hash) + PLMN_FIELD_NUMBER;
                hash = (53 * hash) + getPlmn();
            }
            if (hasMode()) {
                hash = (37 * hash) + MODE_FIELD_NUMBER;
                hash = (53 * hash) + mode_;
            }
            if (hasSignal()) {
                hash = (37 * hash) + SIGNAL_FIELD_NUMBER;
                hash = (53 * hash) + getSignal();
            }
            if (hasLac()) {
                hash = (37 * hash) + LAC_FIELD_NUMBER;
                hash = (53 * hash) + getLac();
            }
            if (hasCi()) {
                hash = (37 * hash) + CI_FIELD_NUMBER;
                hash = (53 * hash) + getCi();
            }
            if (hasPsc()) {
                hash = (37 * hash) + PSC_FIELD_NUMBER;
                hash = (53 * hash) + getPsc();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static DeviceStatus.SimCardSlot parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static DeviceStatus.SimCardSlot parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static DeviceStatus.SimCardSlot parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static DeviceStatus.SimCardSlot parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static DeviceStatus.SimCardSlot parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static DeviceStatus.SimCardSlot parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static DeviceStatus.SimCardSlot parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static DeviceStatus.SimCardSlot parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static DeviceStatus.SimCardSlot parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static DeviceStatus.SimCardSlot parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static DeviceStatus.SimCardSlot parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static DeviceStatus.SimCardSlot parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(DeviceStatus.SimCardSlot prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code SimCardSlot}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:SimCardSlot)
                DeviceStatus.SimCardSlotOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DeviceStatus.internal_static_SimCardSlot_descriptor;
            }

            @Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DeviceStatus.internal_static_SimCardSlot_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                DeviceStatus.SimCardSlot.class, DeviceStatus.SimCardSlot.Builder.class);
            }

            // Construct using DeviceStatus.SimCardSlot.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @Override
            public Builder clear() {
                super.clear();
                imsi_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                plmn_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                mode_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                signal_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                lac_ = 0;
                bitField0_ = (bitField0_ & ~0x00000010);
                ci_ = 0;
                bitField0_ = (bitField0_ & ~0x00000020);
                psc_ = 0;
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DeviceStatus.internal_static_SimCardSlot_descriptor;
            }

            @Override
            public DeviceStatus.SimCardSlot getDefaultInstanceForType() {
                return DeviceStatus.SimCardSlot.getDefaultInstance();
            }

            @Override
            public DeviceStatus.SimCardSlot build() {
                DeviceStatus.SimCardSlot result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public DeviceStatus.SimCardSlot buildPartial() {
                DeviceStatus.SimCardSlot result = new DeviceStatus.SimCardSlot(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.imsi_ = imsi_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.plmn_ = plmn_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.mode_ = mode_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.signal_ = signal_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.lac_ = lac_;
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.ci_ = ci_;
                if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
                    to_bitField0_ |= 0x00000040;
                }
                result.psc_ = psc_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return (Builder) super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            @Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof DeviceStatus.SimCardSlot) {
                    return mergeFrom((DeviceStatus.SimCardSlot) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(DeviceStatus.SimCardSlot other) {
                if (other == DeviceStatus.SimCardSlot.getDefaultInstance()) return this;
                if (other.hasImsi()) {
                    bitField0_ |= 0x00000001;
                    imsi_ = other.imsi_;
                    onChanged();
                }
                if (other.hasPlmn()) {
                    setPlmn(other.getPlmn());
                }
                if (other.hasMode()) {
                    setMode(other.getMode());
                }
                if (other.hasSignal()) {
                    setSignal(other.getSignal());
                }
                if (other.hasLac()) {
                    setLac(other.getLac());
                }
                if (other.hasCi()) {
                    setCi(other.getCi());
                }
                if (other.hasPsc()) {
                    setPsc(other.getPsc());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                DeviceStatus.SimCardSlot parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (DeviceStatus.SimCardSlot) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private Object imsi_ = "";

            /**
             * <code>optional string imsi = 1;</code>
             */
            public boolean hasImsi() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional string imsi = 1;</code>
             */
            public String getImsi() {
                Object ref = imsi_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        imsi_ = s;
                    }
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string imsi = 1;</code>
             */
            public com.google.protobuf.ByteString
            getImsiBytes() {
                Object ref = imsi_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    imsi_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string imsi = 1;</code>
             */
            public Builder setImsi(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                imsi_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string imsi = 1;</code>
             */
            public Builder clearImsi() {
                bitField0_ = (bitField0_ & ~0x00000001);
                imsi_ = getDefaultInstance().getImsi();
                onChanged();
                return this;
            }

            /**
             * <code>optional string imsi = 1;</code>
             */
            public Builder setImsiBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                imsi_ = value;
                onChanged();
                return this;
            }

            private int plmn_;

            /**
             * <code>optional uint32 plmn = 2;</code>
             */
            public boolean hasPlmn() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional uint32 plmn = 2;</code>
             */
            public int getPlmn() {
                return plmn_;
            }

            /**
             * <code>optional uint32 plmn = 2;</code>
             */
            public Builder setPlmn(int value) {
                bitField0_ |= 0x00000002;
                plmn_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 plmn = 2;</code>
             */
            public Builder clearPlmn() {
                bitField0_ = (bitField0_ & ~0x00000002);
                plmn_ = 0;
                onChanged();
                return this;
            }

            private int mode_ = 0;

            /**
             * <code>optional .NetworkMode mode = 3;</code>
             */
            public boolean hasMode() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional .NetworkMode mode = 3;</code>
             */
            public DeviceStatus.NetworkMode getMode() {
                @SuppressWarnings("deprecation")
                DeviceStatus.NetworkMode result = DeviceStatus.NetworkMode.valueOf(mode_);
                return result == null ? DeviceStatus.NetworkMode.NETWORK_TYPE_UNKNOWN : result;
            }

            /**
             * <code>optional .NetworkMode mode = 3;</code>
             */
            public Builder setMode(DeviceStatus.NetworkMode value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                mode_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <code>optional .NetworkMode mode = 3;</code>
             */
            public Builder clearMode() {
                bitField0_ = (bitField0_ & ~0x00000004);
                mode_ = 0;
                onChanged();
                return this;
            }

            private int signal_;

            /**
             * <code>optional uint32 signal = 4;</code>
             */
            public boolean hasSignal() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional uint32 signal = 4;</code>
             */
            public int getSignal() {
                return signal_;
            }

            /**
             * <code>optional uint32 signal = 4;</code>
             */
            public Builder setSignal(int value) {
                bitField0_ |= 0x00000008;
                signal_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 signal = 4;</code>
             */
            public Builder clearSignal() {
                bitField0_ = (bitField0_ & ~0x00000008);
                signal_ = 0;
                onChanged();
                return this;
            }

            private int lac_;

            /**
             * <code>optional uint32 lac = 5;</code>
             */
            public boolean hasLac() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional uint32 lac = 5;</code>
             */
            public int getLac() {
                return lac_;
            }

            /**
             * <code>optional uint32 lac = 5;</code>
             */
            public Builder setLac(int value) {
                bitField0_ |= 0x00000010;
                lac_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 lac = 5;</code>
             */
            public Builder clearLac() {
                bitField0_ = (bitField0_ & ~0x00000010);
                lac_ = 0;
                onChanged();
                return this;
            }

            private int ci_;

            /**
             * <code>optional uint32 ci = 6;</code>
             */
            public boolean hasCi() {
                return ((bitField0_ & 0x00000020) == 0x00000020);
            }

            /**
             * <code>optional uint32 ci = 6;</code>
             */
            public int getCi() {
                return ci_;
            }

            /**
             * <code>optional uint32 ci = 6;</code>
             */
            public Builder setCi(int value) {
                bitField0_ |= 0x00000020;
                ci_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 ci = 6;</code>
             */
            public Builder clearCi() {
                bitField0_ = (bitField0_ & ~0x00000020);
                ci_ = 0;
                onChanged();
                return this;
            }

            private int psc_;

            /**
             * <code>optional uint32 psc = 7;</code>
             */
            public boolean hasPsc() {
                return ((bitField0_ & 0x00000040) == 0x00000040);
            }

            /**
             * <code>optional uint32 psc = 7;</code>
             */
            public int getPsc() {
                return psc_;
            }

            /**
             * <code>optional uint32 psc = 7;</code>
             */
            public Builder setPsc(int value) {
                bitField0_ |= 0x00000040;
                psc_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 psc = 7;</code>
             */
            public Builder clearPsc() {
                bitField0_ = (bitField0_ & ~0x00000040);
                psc_ = 0;
                onChanged();
                return this;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:SimCardSlot)
        }

        // @@protoc_insertion_point(class_scope:SimCardSlot)
        private static final DeviceStatus.SimCardSlot DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new DeviceStatus.SimCardSlot();
        }

        public static DeviceStatus.SimCardSlot getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated
        public static final com.google.protobuf.Parser<SimCardSlot>
                PARSER = new com.google.protobuf.AbstractParser<SimCardSlot>() {
            @Override
            public SimCardSlot parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new SimCardSlot(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<SimCardSlot> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<SimCardSlot> getParserForType() {
            return PARSER;
        }

        @Override
        public DeviceStatus.SimCardSlot getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface ReportDeviceStatusReqOrBuilder extends
            // @@protoc_insertion_point(interface_extends:ReportDeviceStatusReq)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string device_id = 1;</code>
         */
        boolean hasDeviceId();

        /**
         * <code>optional string device_id = 1;</code>
         */
        String getDeviceId();

        /**
         * <code>optional string device_id = 1;</code>
         */
        com.google.protobuf.ByteString
        getDeviceIdBytes();

        /**
         * <code>optional .SimCardSlot slot_1 = 2;</code>
         */
        boolean hasSlot1();

        /**
         * <code>optional .SimCardSlot slot_1 = 2;</code>
         */
        DeviceStatus.SimCardSlot getSlot1();

        /**
         * <code>optional .SimCardSlot slot_1 = 2;</code>
         */
        DeviceStatus.SimCardSlotOrBuilder getSlot1OrBuilder();

        /**
         * <code>optional .SimCardSlot slot_2 = 3;</code>
         */
        boolean hasSlot2();

        /**
         * <code>optional .SimCardSlot slot_2 = 3;</code>
         */
        DeviceStatus.SimCardSlot getSlot2();

        /**
         * <code>optional .SimCardSlot slot_2 = 3;</code>
         */
        DeviceStatus.SimCardSlotOrBuilder getSlot2OrBuilder();

        /**
         * <code>optional uint32 device_status = 4;</code>
         */
        boolean hasDeviceStatus();

        /**
         * <code>optional uint32 device_status = 4;</code>
         */
        int getDeviceStatus();

        /**
         * <code>optional uint32 utc = 5;</code>
         */
        boolean hasUtc();

        /**
         * <code>optional uint32 utc = 5;</code>
         */
        int getUtc();

        /**
         * <code>optional string ip = 6;</code>
         */
        boolean hasIp();

        /**
         * <code>optional string ip = 6;</code>
         */
        String getIp();

        /**
         * <code>optional string ip = 6;</code>
         */
        com.google.protobuf.ByteString
        getIpBytes();

        /**
         * <code>optional string mac = 7;</code>
         */
        boolean hasMac();

        /**
         * <code>optional string mac = 7;</code>
         */
        String getMac();

        /**
         * <code>optional string mac = 7;</code>
         */
        com.google.protobuf.ByteString
        getMacBytes();
    }

    /**
     * Protobuf type {@code ReportDeviceStatusReq}
     */
    public static final class ReportDeviceStatusReq extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:ReportDeviceStatusReq)
            ReportDeviceStatusReqOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use ReportDeviceStatusReq.newBuilder() to construct.
        private ReportDeviceStatusReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private ReportDeviceStatusReq() {
            deviceId_ = "";
            deviceStatus_ = 0;
            utc_ = 0;
            ip_ = "";
            mac_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private ReportDeviceStatusReq(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000001;
                            deviceId_ = bs;
                            break;
                        }
                        case 18: {
                            DeviceStatus.SimCardSlot.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                                subBuilder = slot1_.toBuilder();
                            }
                            slot1_ = input.readMessage(DeviceStatus.SimCardSlot.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(slot1_);
                                slot1_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000002;
                            break;
                        }
                        case 26: {
                            DeviceStatus.SimCardSlot.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                                subBuilder = slot2_.toBuilder();
                            }
                            slot2_ = input.readMessage(DeviceStatus.SimCardSlot.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(slot2_);
                                slot2_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000004;
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            deviceStatus_ = input.readUInt32();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            utc_ = input.readUInt32();
                            break;
                        }
                        case 50: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000020;
                            ip_ = bs;
                            break;
                        }
                        case 58: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000040;
                            mac_ = bs;
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DeviceStatus.internal_static_ReportDeviceStatusReq_descriptor;
        }

        @Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DeviceStatus.internal_static_ReportDeviceStatusReq_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            DeviceStatus.ReportDeviceStatusReq.class, DeviceStatus.ReportDeviceStatusReq.Builder.class);
        }

        private int bitField0_;
        public static final int DEVICE_ID_FIELD_NUMBER = 1;
        private volatile Object deviceId_;

        /**
         * <code>optional string device_id = 1;</code>
         */
        public boolean hasDeviceId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional string device_id = 1;</code>
         */
        public String getDeviceId() {
            Object ref = deviceId_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    deviceId_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string device_id = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceIdBytes() {
            Object ref = deviceId_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceId_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int SLOT_1_FIELD_NUMBER = 2;
        private DeviceStatus.SimCardSlot slot1_;

        /**
         * <code>optional .SimCardSlot slot_1 = 2;</code>
         */
        public boolean hasSlot1() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional .SimCardSlot slot_1 = 2;</code>
         */
        public DeviceStatus.SimCardSlot getSlot1() {
            return slot1_ == null ? DeviceStatus.SimCardSlot.getDefaultInstance() : slot1_;
        }

        /**
         * <code>optional .SimCardSlot slot_1 = 2;</code>
         */
        public DeviceStatus.SimCardSlotOrBuilder getSlot1OrBuilder() {
            return slot1_ == null ? DeviceStatus.SimCardSlot.getDefaultInstance() : slot1_;
        }

        public static final int SLOT_2_FIELD_NUMBER = 3;
        private DeviceStatus.SimCardSlot slot2_;

        /**
         * <code>optional .SimCardSlot slot_2 = 3;</code>
         */
        public boolean hasSlot2() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional .SimCardSlot slot_2 = 3;</code>
         */
        public DeviceStatus.SimCardSlot getSlot2() {
            return slot2_ == null ? DeviceStatus.SimCardSlot.getDefaultInstance() : slot2_;
        }

        /**
         * <code>optional .SimCardSlot slot_2 = 3;</code>
         */
        public DeviceStatus.SimCardSlotOrBuilder getSlot2OrBuilder() {
            return slot2_ == null ? DeviceStatus.SimCardSlot.getDefaultInstance() : slot2_;
        }

        public static final int DEVICE_STATUS_FIELD_NUMBER = 4;
        private int deviceStatus_;

        /**
         * <code>optional uint32 device_status = 4;</code>
         */
        public boolean hasDeviceStatus() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional uint32 device_status = 4;</code>
         */
        public int getDeviceStatus() {
            return deviceStatus_;
        }

        public static final int UTC_FIELD_NUMBER = 5;
        private int utc_;

        /**
         * <code>optional uint32 utc = 5;</code>
         */
        public boolean hasUtc() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>optional uint32 utc = 5;</code>
         */
        public int getUtc() {
            return utc_;
        }

        public static final int IP_FIELD_NUMBER = 6;
        private volatile Object ip_;

        /**
         * <code>optional string ip = 6;</code>
         */
        public boolean hasIp() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        /**
         * <code>optional string ip = 6;</code>
         */
        public String getIp() {
            Object ref = ip_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    ip_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string ip = 6;</code>
         */
        public com.google.protobuf.ByteString
        getIpBytes() {
            Object ref = ip_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                ip_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int MAC_FIELD_NUMBER = 7;
        private volatile Object mac_;

        /**
         * <code>optional string mac = 7;</code>
         */
        public boolean hasMac() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
        }

        /**
         * <code>optional string mac = 7;</code>
         */
        public String getMac() {
            Object ref = mac_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    mac_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string mac = 7;</code>
         */
        public com.google.protobuf.ByteString
        getMacBytes() {
            Object ref = mac_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                mac_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceId_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeMessage(2, getSlot1());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeMessage(3, getSlot2());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeUInt32(4, deviceStatus_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeUInt32(5, utc_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 6, ip_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 7, mac_);
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceId_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getSlot1());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, getSlot2());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(4, deviceStatus_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(5, utc_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, ip_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, mac_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof DeviceStatus.ReportDeviceStatusReq)) {
                return super.equals(obj);
            }
            DeviceStatus.ReportDeviceStatusReq other = (DeviceStatus.ReportDeviceStatusReq) obj;

            boolean result = true;
            result = result && (hasDeviceId() == other.hasDeviceId());
            if (hasDeviceId()) {
                result = result && getDeviceId()
                        .equals(other.getDeviceId());
            }
            result = result && (hasSlot1() == other.hasSlot1());
            if (hasSlot1()) {
                result = result && getSlot1()
                        .equals(other.getSlot1());
            }
            result = result && (hasSlot2() == other.hasSlot2());
            if (hasSlot2()) {
                result = result && getSlot2()
                        .equals(other.getSlot2());
            }
            result = result && (hasDeviceStatus() == other.hasDeviceStatus());
            if (hasDeviceStatus()) {
                result = result && (getDeviceStatus()
                        == other.getDeviceStatus());
            }
            result = result && (hasUtc() == other.hasUtc());
            if (hasUtc()) {
                result = result && (getUtc()
                        == other.getUtc());
            }
            result = result && (hasIp() == other.hasIp());
            if (hasIp()) {
                result = result && getIp()
                        .equals(other.getIp());
            }
            result = result && (hasMac() == other.hasMac());
            if (hasMac()) {
                result = result && getMac()
                        .equals(other.getMac());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasDeviceId()) {
                hash = (37 * hash) + DEVICE_ID_FIELD_NUMBER;
                hash = (53 * hash) + getDeviceId().hashCode();
            }
            if (hasSlot1()) {
                hash = (37 * hash) + SLOT_1_FIELD_NUMBER;
                hash = (53 * hash) + getSlot1().hashCode();
            }
            if (hasSlot2()) {
                hash = (37 * hash) + SLOT_2_FIELD_NUMBER;
                hash = (53 * hash) + getSlot2().hashCode();
            }
            if (hasDeviceStatus()) {
                hash = (37 * hash) + DEVICE_STATUS_FIELD_NUMBER;
                hash = (53 * hash) + getDeviceStatus();
            }
            if (hasUtc()) {
                hash = (37 * hash) + UTC_FIELD_NUMBER;
                hash = (53 * hash) + getUtc();
            }
            if (hasIp()) {
                hash = (37 * hash) + IP_FIELD_NUMBER;
                hash = (53 * hash) + getIp().hashCode();
            }
            if (hasMac()) {
                hash = (37 * hash) + MAC_FIELD_NUMBER;
                hash = (53 * hash) + getMac().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static DeviceStatus.ReportDeviceStatusReq parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static DeviceStatus.ReportDeviceStatusReq parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static DeviceStatus.ReportDeviceStatusReq parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static DeviceStatus.ReportDeviceStatusReq parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static DeviceStatus.ReportDeviceStatusReq parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static DeviceStatus.ReportDeviceStatusReq parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static DeviceStatus.ReportDeviceStatusReq parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static DeviceStatus.ReportDeviceStatusReq parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static DeviceStatus.ReportDeviceStatusReq parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static DeviceStatus.ReportDeviceStatusReq parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static DeviceStatus.ReportDeviceStatusReq parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static DeviceStatus.ReportDeviceStatusReq parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(DeviceStatus.ReportDeviceStatusReq prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code ReportDeviceStatusReq}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:ReportDeviceStatusReq)
                DeviceStatus.ReportDeviceStatusReqOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DeviceStatus.internal_static_ReportDeviceStatusReq_descriptor;
            }

            @Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DeviceStatus.internal_static_ReportDeviceStatusReq_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                DeviceStatus.ReportDeviceStatusReq.class, DeviceStatus.ReportDeviceStatusReq.Builder.class);
            }

            // Construct using DeviceStatus.ReportDeviceStatusReq.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getSlot1FieldBuilder();
                    getSlot2FieldBuilder();
                }
            }

            @Override
            public Builder clear() {
                super.clear();
                deviceId_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                if (slot1Builder_ == null) {
                    slot1_ = null;
                } else {
                    slot1Builder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000002);
                if (slot2Builder_ == null) {
                    slot2_ = null;
                } else {
                    slot2Builder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000004);
                deviceStatus_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                utc_ = 0;
                bitField0_ = (bitField0_ & ~0x00000010);
                ip_ = "";
                bitField0_ = (bitField0_ & ~0x00000020);
                mac_ = "";
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DeviceStatus.internal_static_ReportDeviceStatusReq_descriptor;
            }

            @Override
            public DeviceStatus.ReportDeviceStatusReq getDefaultInstanceForType() {
                return DeviceStatus.ReportDeviceStatusReq.getDefaultInstance();
            }

            @Override
            public DeviceStatus.ReportDeviceStatusReq build() {
                DeviceStatus.ReportDeviceStatusReq result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public DeviceStatus.ReportDeviceStatusReq buildPartial() {
                DeviceStatus.ReportDeviceStatusReq result = new DeviceStatus.ReportDeviceStatusReq(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.deviceId_ = deviceId_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                if (slot1Builder_ == null) {
                    result.slot1_ = slot1_;
                } else {
                    result.slot1_ = slot1Builder_.build();
                }
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                if (slot2Builder_ == null) {
                    result.slot2_ = slot2_;
                } else {
                    result.slot2_ = slot2Builder_.build();
                }
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.deviceStatus_ = deviceStatus_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.utc_ = utc_;
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.ip_ = ip_;
                if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
                    to_bitField0_ |= 0x00000040;
                }
                result.mac_ = mac_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return (Builder) super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            @Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof DeviceStatus.ReportDeviceStatusReq) {
                    return mergeFrom((DeviceStatus.ReportDeviceStatusReq) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(DeviceStatus.ReportDeviceStatusReq other) {
                if (other == DeviceStatus.ReportDeviceStatusReq.getDefaultInstance()) return this;
                if (other.hasDeviceId()) {
                    bitField0_ |= 0x00000001;
                    deviceId_ = other.deviceId_;
                    onChanged();
                }
                if (other.hasSlot1()) {
                    mergeSlot1(other.getSlot1());
                }
                if (other.hasSlot2()) {
                    mergeSlot2(other.getSlot2());
                }
                if (other.hasDeviceStatus()) {
                    setDeviceStatus(other.getDeviceStatus());
                }
                if (other.hasUtc()) {
                    setUtc(other.getUtc());
                }
                if (other.hasIp()) {
                    bitField0_ |= 0x00000020;
                    ip_ = other.ip_;
                    onChanged();
                }
                if (other.hasMac()) {
                    bitField0_ |= 0x00000040;
                    mac_ = other.mac_;
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                DeviceStatus.ReportDeviceStatusReq parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (DeviceStatus.ReportDeviceStatusReq) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private Object deviceId_ = "";

            /**
             * <code>optional string device_id = 1;</code>
             */
            public boolean hasDeviceId() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional string device_id = 1;</code>
             */
            public String getDeviceId() {
                Object ref = deviceId_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        deviceId_ = s;
                    }
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string device_id = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceIdBytes() {
                Object ref = deviceId_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceId_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string device_id = 1;</code>
             */
            public Builder setDeviceId(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                deviceId_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string device_id = 1;</code>
             */
            public Builder clearDeviceId() {
                bitField0_ = (bitField0_ & ~0x00000001);
                deviceId_ = getDefaultInstance().getDeviceId();
                onChanged();
                return this;
            }

            /**
             * <code>optional string device_id = 1;</code>
             */
            public Builder setDeviceIdBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                deviceId_ = value;
                onChanged();
                return this;
            }

            private DeviceStatus.SimCardSlot slot1_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    DeviceStatus.SimCardSlot, DeviceStatus.SimCardSlot.Builder, DeviceStatus.SimCardSlotOrBuilder> slot1Builder_;

            /**
             * <code>optional .SimCardSlot slot_1 = 2;</code>
             */
            public boolean hasSlot1() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional .SimCardSlot slot_1 = 2;</code>
             */
            public DeviceStatus.SimCardSlot getSlot1() {
                if (slot1Builder_ == null) {
                    return slot1_ == null ? DeviceStatus.SimCardSlot.getDefaultInstance() : slot1_;
                } else {
                    return slot1Builder_.getMessage();
                }
            }

            /**
             * <code>optional .SimCardSlot slot_1 = 2;</code>
             */
            public Builder setSlot1(DeviceStatus.SimCardSlot value) {
                if (slot1Builder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    slot1_ = value;
                    onChanged();
                } else {
                    slot1Builder_.setMessage(value);
                }
                bitField0_ |= 0x00000002;
                return this;
            }

            /**
             * <code>optional .SimCardSlot slot_1 = 2;</code>
             */
            public Builder setSlot1(
                    DeviceStatus.SimCardSlot.Builder builderForValue) {
                if (slot1Builder_ == null) {
                    slot1_ = builderForValue.build();
                    onChanged();
                } else {
                    slot1Builder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000002;
                return this;
            }

            /**
             * <code>optional .SimCardSlot slot_1 = 2;</code>
             */
            public Builder mergeSlot1(DeviceStatus.SimCardSlot value) {
                if (slot1Builder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002) &&
                            slot1_ != null &&
                            slot1_ != DeviceStatus.SimCardSlot.getDefaultInstance()) {
                        slot1_ =
                                DeviceStatus.SimCardSlot.newBuilder(slot1_).mergeFrom(value).buildPartial();
                    } else {
                        slot1_ = value;
                    }
                    onChanged();
                } else {
                    slot1Builder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000002;
                return this;
            }

            /**
             * <code>optional .SimCardSlot slot_1 = 2;</code>
             */
            public Builder clearSlot1() {
                if (slot1Builder_ == null) {
                    slot1_ = null;
                    onChanged();
                } else {
                    slot1Builder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            /**
             * <code>optional .SimCardSlot slot_1 = 2;</code>
             */
            public DeviceStatus.SimCardSlot.Builder getSlot1Builder() {
                bitField0_ |= 0x00000002;
                onChanged();
                return getSlot1FieldBuilder().getBuilder();
            }

            /**
             * <code>optional .SimCardSlot slot_1 = 2;</code>
             */
            public DeviceStatus.SimCardSlotOrBuilder getSlot1OrBuilder() {
                if (slot1Builder_ != null) {
                    return slot1Builder_.getMessageOrBuilder();
                } else {
                    return slot1_ == null ?
                            DeviceStatus.SimCardSlot.getDefaultInstance() : slot1_;
                }
            }

            /**
             * <code>optional .SimCardSlot slot_1 = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    DeviceStatus.SimCardSlot, DeviceStatus.SimCardSlot.Builder, DeviceStatus.SimCardSlotOrBuilder>
            getSlot1FieldBuilder() {
                if (slot1Builder_ == null) {
                    slot1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            DeviceStatus.SimCardSlot, DeviceStatus.SimCardSlot.Builder, DeviceStatus.SimCardSlotOrBuilder>(
                            getSlot1(),
                            getParentForChildren(),
                            isClean());
                    slot1_ = null;
                }
                return slot1Builder_;
            }

            private DeviceStatus.SimCardSlot slot2_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    DeviceStatus.SimCardSlot, DeviceStatus.SimCardSlot.Builder, DeviceStatus.SimCardSlotOrBuilder> slot2Builder_;

            /**
             * <code>optional .SimCardSlot slot_2 = 3;</code>
             */
            public boolean hasSlot2() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional .SimCardSlot slot_2 = 3;</code>
             */
            public DeviceStatus.SimCardSlot getSlot2() {
                if (slot2Builder_ == null) {
                    return slot2_ == null ? DeviceStatus.SimCardSlot.getDefaultInstance() : slot2_;
                } else {
                    return slot2Builder_.getMessage();
                }
            }

            /**
             * <code>optional .SimCardSlot slot_2 = 3;</code>
             */
            public Builder setSlot2(DeviceStatus.SimCardSlot value) {
                if (slot2Builder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    slot2_ = value;
                    onChanged();
                } else {
                    slot2Builder_.setMessage(value);
                }
                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <code>optional .SimCardSlot slot_2 = 3;</code>
             */
            public Builder setSlot2(
                    DeviceStatus.SimCardSlot.Builder builderForValue) {
                if (slot2Builder_ == null) {
                    slot2_ = builderForValue.build();
                    onChanged();
                } else {
                    slot2Builder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <code>optional .SimCardSlot slot_2 = 3;</code>
             */
            public Builder mergeSlot2(DeviceStatus.SimCardSlot value) {
                if (slot2Builder_ == null) {
                    if (((bitField0_ & 0x00000004) == 0x00000004) &&
                            slot2_ != null &&
                            slot2_ != DeviceStatus.SimCardSlot.getDefaultInstance()) {
                        slot2_ =
                                DeviceStatus.SimCardSlot.newBuilder(slot2_).mergeFrom(value).buildPartial();
                    } else {
                        slot2_ = value;
                    }
                    onChanged();
                } else {
                    slot2Builder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <code>optional .SimCardSlot slot_2 = 3;</code>
             */
            public Builder clearSlot2() {
                if (slot2Builder_ == null) {
                    slot2_ = null;
                    onChanged();
                } else {
                    slot2Builder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            /**
             * <code>optional .SimCardSlot slot_2 = 3;</code>
             */
            public DeviceStatus.SimCardSlot.Builder getSlot2Builder() {
                bitField0_ |= 0x00000004;
                onChanged();
                return getSlot2FieldBuilder().getBuilder();
            }

            /**
             * <code>optional .SimCardSlot slot_2 = 3;</code>
             */
            public DeviceStatus.SimCardSlotOrBuilder getSlot2OrBuilder() {
                if (slot2Builder_ != null) {
                    return slot2Builder_.getMessageOrBuilder();
                } else {
                    return slot2_ == null ?
                            DeviceStatus.SimCardSlot.getDefaultInstance() : slot2_;
                }
            }

            /**
             * <code>optional .SimCardSlot slot_2 = 3;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    DeviceStatus.SimCardSlot, DeviceStatus.SimCardSlot.Builder, DeviceStatus.SimCardSlotOrBuilder>
            getSlot2FieldBuilder() {
                if (slot2Builder_ == null) {
                    slot2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            DeviceStatus.SimCardSlot, DeviceStatus.SimCardSlot.Builder, DeviceStatus.SimCardSlotOrBuilder>(
                            getSlot2(),
                            getParentForChildren(),
                            isClean());
                    slot2_ = null;
                }
                return slot2Builder_;
            }

            private int deviceStatus_;

            /**
             * <code>optional uint32 device_status = 4;</code>
             */
            public boolean hasDeviceStatus() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional uint32 device_status = 4;</code>
             */
            public int getDeviceStatus() {
                return deviceStatus_;
            }

            /**
             * <code>optional uint32 device_status = 4;</code>
             */
            public Builder setDeviceStatus(int value) {
                bitField0_ |= 0x00000008;
                deviceStatus_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 device_status = 4;</code>
             */
            public Builder clearDeviceStatus() {
                bitField0_ = (bitField0_ & ~0x00000008);
                deviceStatus_ = 0;
                onChanged();
                return this;
            }

            private int utc_;

            /**
             * <code>optional uint32 utc = 5;</code>
             */
            public boolean hasUtc() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional uint32 utc = 5;</code>
             */
            public int getUtc() {
                return utc_;
            }

            /**
             * <code>optional uint32 utc = 5;</code>
             */
            public Builder setUtc(int value) {
                bitField0_ |= 0x00000010;
                utc_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 utc = 5;</code>
             */
            public Builder clearUtc() {
                bitField0_ = (bitField0_ & ~0x00000010);
                utc_ = 0;
                onChanged();
                return this;
            }

            private Object ip_ = "";

            /**
             * <code>optional string ip = 6;</code>
             */
            public boolean hasIp() {
                return ((bitField0_ & 0x00000020) == 0x00000020);
            }

            /**
             * <code>optional string ip = 6;</code>
             */
            public String getIp() {
                Object ref = ip_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        ip_ = s;
                    }
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string ip = 6;</code>
             */
            public com.google.protobuf.ByteString
            getIpBytes() {
                Object ref = ip_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    ip_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string ip = 6;</code>
             */
            public Builder setIp(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000020;
                ip_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string ip = 6;</code>
             */
            public Builder clearIp() {
                bitField0_ = (bitField0_ & ~0x00000020);
                ip_ = getDefaultInstance().getIp();
                onChanged();
                return this;
            }

            /**
             * <code>optional string ip = 6;</code>
             */
            public Builder setIpBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000020;
                ip_ = value;
                onChanged();
                return this;
            }

            private Object mac_ = "";

            /**
             * <code>optional string mac = 7;</code>
             */
            public boolean hasMac() {
                return ((bitField0_ & 0x00000040) == 0x00000040);
            }

            /**
             * <code>optional string mac = 7;</code>
             */
            public String getMac() {
                Object ref = mac_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        mac_ = s;
                    }
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string mac = 7;</code>
             */
            public com.google.protobuf.ByteString
            getMacBytes() {
                Object ref = mac_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    mac_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string mac = 7;</code>
             */
            public Builder setMac(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000040;
                mac_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string mac = 7;</code>
             */
            public Builder clearMac() {
                bitField0_ = (bitField0_ & ~0x00000040);
                mac_ = getDefaultInstance().getMac();
                onChanged();
                return this;
            }

            /**
             * <code>optional string mac = 7;</code>
             */
            public Builder setMacBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000040;
                mac_ = value;
                onChanged();
                return this;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:ReportDeviceStatusReq)
        }

        // @@protoc_insertion_point(class_scope:ReportDeviceStatusReq)
        private static final DeviceStatus.ReportDeviceStatusReq DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new DeviceStatus.ReportDeviceStatusReq();
        }

        public static DeviceStatus.ReportDeviceStatusReq getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated
        public static final com.google.protobuf.Parser<ReportDeviceStatusReq>
                PARSER = new com.google.protobuf.AbstractParser<ReportDeviceStatusReq>() {
            @Override
            public ReportDeviceStatusReq parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new ReportDeviceStatusReq(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<ReportDeviceStatusReq> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<ReportDeviceStatusReq> getParserForType() {
            return PARSER;
        }

        @Override
        public DeviceStatus.ReportDeviceStatusReq getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface ReportDeviceStatusInfoReqOrBuilder extends
            // @@protoc_insertion_point(interface_extends:ReportDeviceStatusInfoReq)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
         */
        java.util.List<ReportDeviceStatusReq>
        getDeviceStatusList();

        /**
         * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
         */
        DeviceStatus.ReportDeviceStatusReq getDeviceStatus(int index);

        /**
         * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
         */
        int getDeviceStatusCount();

        /**
         * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
         */
        java.util.List<? extends ReportDeviceStatusReqOrBuilder>
        getDeviceStatusOrBuilderList();

        /**
         * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
         */
        DeviceStatus.ReportDeviceStatusReqOrBuilder getDeviceStatusOrBuilder(
                int index);
    }

    /**
     * Protobuf type {@code ReportDeviceStatusInfoReq}
     */
    public static final class ReportDeviceStatusInfoReq extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:ReportDeviceStatusInfoReq)
            ReportDeviceStatusInfoReqOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use ReportDeviceStatusInfoReq.newBuilder() to construct.
        private ReportDeviceStatusInfoReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private ReportDeviceStatusInfoReq() {
            deviceStatus_ = java.util.Collections.emptyList();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private ReportDeviceStatusInfoReq(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                deviceStatus_ = new java.util.ArrayList<ReportDeviceStatusReq>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            deviceStatus_.add(
                                    input.readMessage(DeviceStatus.ReportDeviceStatusReq.PARSER, extensionRegistry));
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    deviceStatus_ = java.util.Collections.unmodifiableList(deviceStatus_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DeviceStatus.internal_static_ReportDeviceStatusInfoReq_descriptor;
        }

        @Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DeviceStatus.internal_static_ReportDeviceStatusInfoReq_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            DeviceStatus.ReportDeviceStatusInfoReq.class, DeviceStatus.ReportDeviceStatusInfoReq.Builder.class);
        }

        public static final int DEVICE_STATUS_FIELD_NUMBER = 1;
        private java.util.List<ReportDeviceStatusReq> deviceStatus_;

        /**
         * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
         */
        public java.util.List<ReportDeviceStatusReq> getDeviceStatusList() {
            return deviceStatus_;
        }

        /**
         * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
         */
        public java.util.List<? extends ReportDeviceStatusReqOrBuilder>
        getDeviceStatusOrBuilderList() {
            return deviceStatus_;
        }

        /**
         * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
         */
        public int getDeviceStatusCount() {
            return deviceStatus_.size();
        }

        /**
         * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
         */
        public DeviceStatus.ReportDeviceStatusReq getDeviceStatus(int index) {
            return deviceStatus_.get(index);
        }

        /**
         * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
         */
        public DeviceStatus.ReportDeviceStatusReqOrBuilder getDeviceStatusOrBuilder(
                int index) {
            return deviceStatus_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < deviceStatus_.size(); i++) {
                output.writeMessage(1, deviceStatus_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < deviceStatus_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, deviceStatus_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof DeviceStatus.ReportDeviceStatusInfoReq)) {
                return super.equals(obj);
            }
            DeviceStatus.ReportDeviceStatusInfoReq other = (DeviceStatus.ReportDeviceStatusInfoReq) obj;

            boolean result = true;
            result = result && getDeviceStatusList()
                    .equals(other.getDeviceStatusList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getDeviceStatusCount() > 0) {
                hash = (37 * hash) + DEVICE_STATUS_FIELD_NUMBER;
                hash = (53 * hash) + getDeviceStatusList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static DeviceStatus.ReportDeviceStatusInfoReq parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static DeviceStatus.ReportDeviceStatusInfoReq parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static DeviceStatus.ReportDeviceStatusInfoReq parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static DeviceStatus.ReportDeviceStatusInfoReq parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static DeviceStatus.ReportDeviceStatusInfoReq parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static DeviceStatus.ReportDeviceStatusInfoReq parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static DeviceStatus.ReportDeviceStatusInfoReq parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static DeviceStatus.ReportDeviceStatusInfoReq parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static DeviceStatus.ReportDeviceStatusInfoReq parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static DeviceStatus.ReportDeviceStatusInfoReq parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static DeviceStatus.ReportDeviceStatusInfoReq parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static DeviceStatus.ReportDeviceStatusInfoReq parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(DeviceStatus.ReportDeviceStatusInfoReq prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code ReportDeviceStatusInfoReq}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:ReportDeviceStatusInfoReq)
                DeviceStatus.ReportDeviceStatusInfoReqOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DeviceStatus.internal_static_ReportDeviceStatusInfoReq_descriptor;
            }

            @Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DeviceStatus.internal_static_ReportDeviceStatusInfoReq_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                DeviceStatus.ReportDeviceStatusInfoReq.class, DeviceStatus.ReportDeviceStatusInfoReq.Builder.class);
            }

            // Construct using DeviceStatus.ReportDeviceStatusInfoReq.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getDeviceStatusFieldBuilder();
                }
            }

            @Override
            public Builder clear() {
                super.clear();
                if (deviceStatusBuilder_ == null) {
                    deviceStatus_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    deviceStatusBuilder_.clear();
                }
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DeviceStatus.internal_static_ReportDeviceStatusInfoReq_descriptor;
            }

            @Override
            public DeviceStatus.ReportDeviceStatusInfoReq getDefaultInstanceForType() {
                return DeviceStatus.ReportDeviceStatusInfoReq.getDefaultInstance();
            }

            @Override
            public DeviceStatus.ReportDeviceStatusInfoReq build() {
                DeviceStatus.ReportDeviceStatusInfoReq result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public DeviceStatus.ReportDeviceStatusInfoReq buildPartial() {
                DeviceStatus.ReportDeviceStatusInfoReq result = new DeviceStatus.ReportDeviceStatusInfoReq(this);
                int from_bitField0_ = bitField0_;
                if (deviceStatusBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        deviceStatus_ = java.util.Collections.unmodifiableList(deviceStatus_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.deviceStatus_ = deviceStatus_;
                } else {
                    result.deviceStatus_ = deviceStatusBuilder_.build();
                }
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return (Builder) super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            @Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof DeviceStatus.ReportDeviceStatusInfoReq) {
                    return mergeFrom((DeviceStatus.ReportDeviceStatusInfoReq) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(DeviceStatus.ReportDeviceStatusInfoReq other) {
                if (other == DeviceStatus.ReportDeviceStatusInfoReq.getDefaultInstance())
                    return this;
                if (deviceStatusBuilder_ == null) {
                    if (!other.deviceStatus_.isEmpty()) {
                        if (deviceStatus_.isEmpty()) {
                            deviceStatus_ = other.deviceStatus_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureDeviceStatusIsMutable();
                            deviceStatus_.addAll(other.deviceStatus_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.deviceStatus_.isEmpty()) {
                        if (deviceStatusBuilder_.isEmpty()) {
                            deviceStatusBuilder_.dispose();
                            deviceStatusBuilder_ = null;
                            deviceStatus_ = other.deviceStatus_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            deviceStatusBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getDeviceStatusFieldBuilder() : null;
                        } else {
                            deviceStatusBuilder_.addAllMessages(other.deviceStatus_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                DeviceStatus.ReportDeviceStatusInfoReq parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (DeviceStatus.ReportDeviceStatusInfoReq) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private java.util.List<ReportDeviceStatusReq> deviceStatus_ =
                    java.util.Collections.emptyList();

            private void ensureDeviceStatusIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    deviceStatus_ = new java.util.ArrayList<ReportDeviceStatusReq>(deviceStatus_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    DeviceStatus.ReportDeviceStatusReq, DeviceStatus.ReportDeviceStatusReq.Builder, DeviceStatus.ReportDeviceStatusReqOrBuilder> deviceStatusBuilder_;

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public java.util.List<ReportDeviceStatusReq> getDeviceStatusList() {
                if (deviceStatusBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(deviceStatus_);
                } else {
                    return deviceStatusBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public int getDeviceStatusCount() {
                if (deviceStatusBuilder_ == null) {
                    return deviceStatus_.size();
                } else {
                    return deviceStatusBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public DeviceStatus.ReportDeviceStatusReq getDeviceStatus(int index) {
                if (deviceStatusBuilder_ == null) {
                    return deviceStatus_.get(index);
                } else {
                    return deviceStatusBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public Builder setDeviceStatus(
                    int index, DeviceStatus.ReportDeviceStatusReq value) {
                if (deviceStatusBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureDeviceStatusIsMutable();
                    deviceStatus_.set(index, value);
                    onChanged();
                } else {
                    deviceStatusBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public Builder setDeviceStatus(
                    int index, DeviceStatus.ReportDeviceStatusReq.Builder builderForValue) {
                if (deviceStatusBuilder_ == null) {
                    ensureDeviceStatusIsMutable();
                    deviceStatus_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    deviceStatusBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public Builder addDeviceStatus(DeviceStatus.ReportDeviceStatusReq value) {
                if (deviceStatusBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureDeviceStatusIsMutable();
                    deviceStatus_.add(value);
                    onChanged();
                } else {
                    deviceStatusBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public Builder addDeviceStatus(
                    int index, DeviceStatus.ReportDeviceStatusReq value) {
                if (deviceStatusBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureDeviceStatusIsMutable();
                    deviceStatus_.add(index, value);
                    onChanged();
                } else {
                    deviceStatusBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public Builder addDeviceStatus(
                    DeviceStatus.ReportDeviceStatusReq.Builder builderForValue) {
                if (deviceStatusBuilder_ == null) {
                    ensureDeviceStatusIsMutable();
                    deviceStatus_.add(builderForValue.build());
                    onChanged();
                } else {
                    deviceStatusBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public Builder addDeviceStatus(
                    int index, DeviceStatus.ReportDeviceStatusReq.Builder builderForValue) {
                if (deviceStatusBuilder_ == null) {
                    ensureDeviceStatusIsMutable();
                    deviceStatus_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    deviceStatusBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public Builder addAllDeviceStatus(
                    Iterable<? extends ReportDeviceStatusReq> values) {
                if (deviceStatusBuilder_ == null) {
                    ensureDeviceStatusIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, deviceStatus_);
                    onChanged();
                } else {
                    deviceStatusBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public Builder clearDeviceStatus() {
                if (deviceStatusBuilder_ == null) {
                    deviceStatus_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    deviceStatusBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public Builder removeDeviceStatus(int index) {
                if (deviceStatusBuilder_ == null) {
                    ensureDeviceStatusIsMutable();
                    deviceStatus_.remove(index);
                    onChanged();
                } else {
                    deviceStatusBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public DeviceStatus.ReportDeviceStatusReq.Builder getDeviceStatusBuilder(
                    int index) {
                return getDeviceStatusFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public DeviceStatus.ReportDeviceStatusReqOrBuilder getDeviceStatusOrBuilder(
                    int index) {
                if (deviceStatusBuilder_ == null) {
                    return deviceStatus_.get(index);
                } else {
                    return deviceStatusBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public java.util.List<? extends ReportDeviceStatusReqOrBuilder>
            getDeviceStatusOrBuilderList() {
                if (deviceStatusBuilder_ != null) {
                    return deviceStatusBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(deviceStatus_);
                }
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public DeviceStatus.ReportDeviceStatusReq.Builder addDeviceStatusBuilder() {
                return getDeviceStatusFieldBuilder().addBuilder(
                        DeviceStatus.ReportDeviceStatusReq.getDefaultInstance());
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public DeviceStatus.ReportDeviceStatusReq.Builder addDeviceStatusBuilder(
                    int index) {
                return getDeviceStatusFieldBuilder().addBuilder(
                        index, DeviceStatus.ReportDeviceStatusReq.getDefaultInstance());
            }

            /**
             * <code>repeated .ReportDeviceStatusReq device_status = 1;</code>
             */
            public java.util.List<ReportDeviceStatusReq.Builder>
            getDeviceStatusBuilderList() {
                return getDeviceStatusFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    DeviceStatus.ReportDeviceStatusReq, DeviceStatus.ReportDeviceStatusReq.Builder, DeviceStatus.ReportDeviceStatusReqOrBuilder>
            getDeviceStatusFieldBuilder() {
                if (deviceStatusBuilder_ == null) {
                    deviceStatusBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            DeviceStatus.ReportDeviceStatusReq, DeviceStatus.ReportDeviceStatusReq.Builder, DeviceStatus.ReportDeviceStatusReqOrBuilder>(
                            deviceStatus_,
                            ((bitField0_ & 0x00000001) == 0x00000001),
                            getParentForChildren(),
                            isClean());
                    deviceStatus_ = null;
                }
                return deviceStatusBuilder_;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:ReportDeviceStatusInfoReq)
        }

        // @@protoc_insertion_point(class_scope:ReportDeviceStatusInfoReq)
        private static final DeviceStatus.ReportDeviceStatusInfoReq DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new DeviceStatus.ReportDeviceStatusInfoReq();
        }

        public static DeviceStatus.ReportDeviceStatusInfoReq getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated
        public static final com.google.protobuf.Parser<ReportDeviceStatusInfoReq>
                PARSER = new com.google.protobuf.AbstractParser<ReportDeviceStatusInfoReq>() {
            @Override
            public ReportDeviceStatusInfoReq parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new ReportDeviceStatusInfoReq(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<ReportDeviceStatusInfoReq> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<ReportDeviceStatusInfoReq> getParserForType() {
            return PARSER;
        }

        @Override
        public DeviceStatus.ReportDeviceStatusInfoReq getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_SimCardSlot_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_SimCardSlot_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_ReportDeviceStatusReq_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_ReportDeviceStatusReq_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_ReportDeviceStatusInfoReq_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_ReportDeviceStatusInfoReq_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        String[] descriptorData = {
                "\n\023device_status.proto\"{\n\013SimCardSlot\022\014\n\004" +
                        "imsi\030\001 \001(\t\022\014\n\004plmn\030\002 \001(\r\022\032\n\004mode\030\003 \001(\0162\014" +
                        ".NetworkMode\022\016\n\006signal\030\004 \001(\r\022\013\n\003lac\030\005 \001(" +
                        "\r\022\n\n\002ci\030\006 \001(\r\022\013\n\003psc\030\007 \001(\r\"\243\001\n\025ReportDev" +
                        "iceStatusReq\022\021\n\tdevice_id\030\001 \001(\t\022\034\n\006slot_" +
                        "1\030\002 \001(\0132\014.SimCardSlot\022\034\n\006slot_2\030\003 \001(\0132\014." +
                        "SimCardSlot\022\025\n\rdevice_status\030\004 \001(\r\022\013\n\003ut" +
                        "c\030\005 \001(\r\022\n\n\002ip\030\006 \001(\t\022\013\n\003mac\030\007 \001(\t\"J\n\031Repo" +
                        "rtDeviceStatusInfoReq\022-\n\rdevice_status\030\001" +
                        " \003(\0132\026.ReportDeviceStatusReq*\354\003\n\013Network" +
                        "Mode\022\030\n\024NETWORK_TYPE_UNKNOWN\020\000\022\025\n\021NETWOR" +
                        "K_TYPE_GPRS\020\001\022\025\n\021NETWORK_TYPE_EDGE\020\002\022\025\n\021" +
                        "NETWORK_TYPE_UMTS\020\003\022\025\n\021NETWORK_TYPE_CDMA" +
                        "\020\004\022\027\n\023NETWORK_TYPE_EVDO_0\020\005\022\027\n\023NETWORK_T" +
                        "YPE_EVDO_A\020\006\022\026\n\022NETWORK_TYPE_1xRTT\020\007\022\026\n\022" +
                        "NETWORK_TYPE_HSDPA\020\010\022\026\n\022NETWORK_TYPE_HSU" +
                        "PA\020\t\022\025\n\021NETWORK_TYPE_HSPA\020\n\022\025\n\021NETWORK_T" +
                        "YPE_IDEN\020\013\022\027\n\023NETWORK_TYPE_EVDO_B\020\014\022\024\n\020N" +
                        "ETWORK_TYPE_LTE\020\r\022\026\n\022NETWORK_TYPE_EHRPD\020" +
                        "\016\022\026\n\022NETWORK_TYPE_HSPAP\020\017\022\024\n\020NETWORK_TYP" +
                        "E_GSM\020\020\022\031\n\025NETWORK_TYPE_TD_SCDMA\020\021\022\026\n\022NE" +
                        "TWORK_TYPE_IWLAN\020\022\022\027\n\023NETWORK_TYPE_LTE_C" +
                        "A\020\023"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        }, assigner);
        internal_static_SimCardSlot_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_SimCardSlot_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_SimCardSlot_descriptor,
                new String[]{"Imsi", "Plmn", "Mode", "Signal", "Lac", "Ci", "Psc",});
        internal_static_ReportDeviceStatusReq_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_ReportDeviceStatusReq_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_ReportDeviceStatusReq_descriptor,
                new String[]{"DeviceId", "Slot1", "Slot2", "DeviceStatus", "Utc", "Ip", "Mac",});
        internal_static_ReportDeviceStatusInfoReq_descriptor =
                getDescriptor().getMessageTypes().get(2);
        internal_static_ReportDeviceStatusInfoReq_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_ReportDeviceStatusInfoReq_descriptor,
                new String[]{"DeviceStatus",});
    }

    // @@protoc_insertion_point(outer_class_scope)
}
